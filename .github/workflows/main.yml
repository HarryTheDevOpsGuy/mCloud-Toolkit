# This is a basic workflow to help you get started with Actions

name: Run mCert-manager

# Controls when the workflow will run
on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '*/5 * * * *'
    
  # Triggers the workflow on push or pull request events but only for the master branch
#   push:
#     branches: [ dev ]
#   pull_request:
#     branches: [ dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:  
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container:
      image: harry97/mcloud-toolkit:latest
      env:
        SLACK_CLI_TOKEN: ${{ secrets.DEFAULT_SLACK_TOKEN }}
        SENDGRID_API_KEY: ${{ secrets.DEFAULT_SENDGRID_TOKEN }}
        EMAIL_FROM: mcloudautomation@gmail.com
        EMAIL_MODE: SENDGRID
        REPLY_EMAIL_ADDRESS: 'Harry <HarryTheDevOpsGuy@gmail.com>'
        
        

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
      # Runs a single command using the runners shell
      - name: Check Cert expiry
        run: mcert -d google.com -x 80 -s '#devops' -e harrythedevopsguy@gmail.com
      
      # Check SSL certs 
      - name: Check Cert expiry
        run: |
          DEFAULT_NOTIFY="harrythedevopsguy@gmail.com"
          DOMAINS=()
          DOMAIN_LIST=(
                'https://docs.google.com/spreadsheets/d/e/2PACX-1vScqQ8BfTdgZ8WqGL9e7953dGhr61fDiNlTRs99bqtWRwSuXyDXe8uDnRsYvPddHaPA49cor1eu20bW/pub?gid=0&single=true&output=csv'
                'https://docs.google.com/spreadsheets/d/e/2PACX-1vTuqhESSxtJv79LWRPju3m_mkdhZFQaQi753p51HAQX5nzi65gCu-AbZkQDeEZGm4GE4Wmeoj6X2lFt/pub?gid=0&single=true&output=csv'
          )
          for GSHEET in ${DOMAIN_LIST[@]}; do
            IFS=","
            curl -sL  "${GSHEET}" |awk -F',' '{print $1"," $2}'|sed '1d'|while read domain email_id remarks
              do
                if [[ -z "${email_id}" ]]; then
                    DOMAINS+=(${domain})
                    export TRIGGER='true'
                  else
                    mcert -d "$domain" -s "#devops" -e "${email_id}" -x 60 -V
                fi
              done
            if [[ "${TRIGGER}" == 'true' ]]; then
              echo "checking again." "$(echo ${DOMAINS[@]})"
              mcert -d "$(echo ${DOMAINS[@]})" -s "#devops" -e "${DEFAULT_NOTIFY}" -x 60 -V
            fi
          done
        
      # Runs a single command using the runners shell
      #- name: Send Email Using mSend
      #  run: msend -t harrythedevopsguy@gmail.com -s 'github workflow subject' -m 'github workflow' 

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo slack - $SLACK_CLI_TOKEN
          pwd
          echo $HOME
          echo Add other actions to build,
          echo test, and deploy your project.
          ls -la 
          env
